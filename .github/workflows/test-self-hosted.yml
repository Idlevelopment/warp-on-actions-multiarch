name: "Test Self-Hosted"

on:
  workflow_dispatch:
  release:
    types: [created]
    tags:
      - 'v*'

jobs:
  client-dual-by-default:
    runs-on: self-hosted
    name: client warp+doh mode by default
    steps:
      - uses: Idlevelopment/warp-on-actions@main
        with:
          mode: client

  client-ipv4:
    runs-on: self-hosted
    name: client warp+doh mode with ipv4
    steps:
      - name: Set up WARP with client with ipv4
        uses: Idlevelopment/warp-on-actions@main
        with:
          stack: ipv4
          mode: client

  client-ipv6:
    runs-on: self-hosted
    name: client warp+doh mode with ipv6
    steps:
      - name: Set up WARP with client
        uses: Idlevelopment/warp-on-actions@main
        with:
          stack: ipv6
          mode: client

  client-dual:
    runs-on: self-hosted
    name: client warp+doh mode with dual
    steps:
      - name: Set up WARP with client
        uses: Idlevelopment/warp-on-actions@main
        with:
          stack: dual
          mode: client

#  wireguard-dual-by-default:
#    runs-on: self-hosted
#    name: wireguard mode by default
#    steps:
#      - uses: Idlevelopment/warp-on-actions@main
#
#  wireguard-ipv4:
#    runs-on: self-hosted
#    name: wireguard mode with ipv4
#    steps:
#      - name: Set up WARP with client with ipv4
#        uses: Idlevelopment/warp-on-actions@main
#        with:
#          stack: ipv4
#          mode: wireguard

  wireguard-ipv6:
    runs-on: self-hosted
    name: wireguard mode with ipv6
    steps:
      - name: Set up WARP with client
        uses: Idlevelopment/warp-on-actions@main
        with:
          stack: ipv6
          mode: wireguard

#  wireguard-dual:
#    runs-on: self-hosted
#    name: wireguard mode with dual
#    steps:
#      - name: Set up WARP with client
#        uses: Idlevelopment/warp-on-actions@main
#        with:
#          stack: dual
#          mode: wireguard
